const Discord = require("discord.js");
const fs = require("fs");
const client = new Discord.Client();
const { Prefix, Token, Color } = require("./config.js");
client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();
client.db = require("quick.db");
client.login('ODE0NjA4NzA3NDEyMjk1Nzgw.YDgVeg.G6j6CiNgwFZYb2gPNQy5i9MaAX8');
const prefix = "1";



client.on("ready", async () => {
  console.log(`ready!`);
  client.user
       .setActivity(`${Prefix}help | ${client.guilds.cache.size} Server`, { type: "PLAYING" })
       .setActivity(`HaaaMa`)
    .catch(error => console.log(error));
});

client.on("message", async message => {
  if (message.channel.type === "dm") return;
  if (message.author.bot) return;
  if (!message.guild) return;
  if (!message.member)
    message.member = await message.guild.fetchMember(message);

  if (message.content.match(new RegExp(`^<@!?${client.user.id}>`))) {
    return message.channel.send(`My Prefix is \`${Prefix}\``);
  }
});

let modules = ["fun", "info", "moderation", "gif", "photo", "text"];

modules.forEach(function(module) {
  fs.readdir(`./commands/${module}`, function(err, files) {
    if (err)
      return new Error(
        "Missing Folder Of Commands! Example : Commands/<Folder>/<Command>.js"
      );
    files.forEach(function(file) {
      if (!file.endsWith(".js")) return;
      let command = require(`./commands/${module}/${file}`);
      console.log(`${command.name} Command Has Been Loaded - โ`);
      if (command.name) client.commands.set(command.name, command);
      if (command.aliases) {
        command.aliases.forEach(alias =>
          client.aliases.set(alias, command.name)
        );
      }
      if (command.aliases.length === 0) command.aliases = null;
    });
  });
});

client.on("message", async message => {
  if (message.channel.type === "dm") return;
  if (message.author.bot) return;
  if (!message.guild) return;
  if (!message.member)
    message.member = await message.guild.fetchMember(message);

  if (!message.content.startsWith(Prefix)) return;

  const args = message.content
    .slice(Prefix.length)
    .trim()
    .split(" ");
  const cmd = args.shift().toLowerCase();

  if (cmd.length === 0) return;

  let command =
    client.commands.get(cmd) || client.commands.get(client.aliases.get(cmd));

  if (!command) return;

  if (command) {
    if (!message.guild.me.hasPermission("MEMBER"))  /// changed
      return message.channel.send(
        "I Don't Have Enough Permission To Use This Or Any Of My Commands | Require : Member"
      );
    command.run(client, message, args);
  }
  console.log(
    `User : ${message.author.tag} (${message.author.id}) Server : ${message.guild.name} (${message.guild.id}) Command : ${command.name}`
  );
});


const channelid = "843947526432096286"    //id channele vc
client.on("ready", () => {
    const channel = client.channels.cache.get(channelid);
    if (!channel) return console.error("The channel does not exist!");
    channel.join().then(connection => {
        console.log("Successfully connected.");
    }).catch(e => {
        console.error(e);
    });
}); 





client.on("message", message => {
  if (message.content === prefix + "lock") {
    if (!message.member.hasPermission("MANAGE_CHANNELS")) return;
   

    if (!message.channel.guild) return;

    let bwan = new Discord.MessageEmbed()

      .setFooter("Channel Locked ๐")
      .setColor("RANDOM")
      .setTitle("Locked");
      message.react("๐")
    message.channel.send(bwan);

    message.channel.updateOverwrite(message.guild.id, {
      SEND_MESSAGES: false
    });
  }
});

//////////////////////////////////////////////////////////////////

client.on("message", message => {
  if (message.content === prefix + "unlock") {
    if (!message.member.hasPermission("MANAGE_CHANNELS")) return;
   

    if (!message.channel.guild) return;

    let bwan = new Discord.MessageEmbed()

      .setFooter("Channel unlock ๐")
      .setColor("RANDOM")
      .setTitle("Channel unlcoked ๐");

    message.channel.updateOverwrite(message.guild.id, {
      SEND_MESSAGES: true
    });
  }
});



client.on("message", message => {
  if (message.content.startsWith(prefix + "listem", "listemoji")) {
    let Emojis = "";
    let EmojisAnimated = "";
    let EmojiCount = 0;
    let Animated = 0;
    let OverallEmojis = 0;
    function Emoji(id) {
      return client.emojis.cache.get(id).toString();
    }
    message.guild.emojis.cache.forEach(emoji => {
      OverallEmojis++;
      if (emoji.animated) {
        Animated++;
        EmojisAnimated += Emoji(emoji.id);
      } else {
        EmojiCount++;
        Emojis += Emoji(emoji.id);
      }
    });
    let Embed = new Discord.MessageEmbed()
      .setTitle(`Emojis in ${message.guild.name}.`)
      .setDescription(
        `**Animated [${Animated}]**:\n${EmojisAnimated}\n\n**Standard [${EmojiCount}]**:\n${Emojis}\n\n**All Emoji [${OverallEmojis}]**`
      )
      .setColor(`RANDOM`);
    message.channel.send(Embed);
  }
});



client.on("message", function(message) {
  let args = message.content
    .split(" ")
    .slice(1)
    .join(" ");
  if (message.content.startsWith(prefix + "say")) {
    if (!message.member.hasPermission("MANAGE_MESSAGE")) if (!args) return;
    message.channel.send(`** ${args}**`);
  }
});



client.on("message", async message => {
  if (message.content.startsWith(prefix + "uptime")) {
    let day = Math.floor(client.uptime / 86400000);
    let oclock = Math.floor(client.uptime / 3600000) % 24;
    let minte = Math.floor(client.uptime / 60000) % 60;
    let second = Math.floor(client.uptime / 1000) % 60;

    return message.channel.send(
      `__Uptime:__\n${day}d ${oclock}h ${minte}m ${second}s`
    );
  }
});


///
///
///
///


client.on("message", async message => {
  if (message.content.startsWith(prefix + "nick")) {
    let args = message.content.split(" ").slice(1);

    let hama = args.slice(1).join(" ");

    if (!message.member.hasPermission("MANAGE_GUILD")) {
      return message.channel.send("pewist ba role bo anjamdane amkara");
    }
    if (!message.guild.me.hasPermission("MANAGE_GUILD")) {
      return message.channel.send("rolem niya tawakw am kara bkam");
    }
    let haaama = message.mentions.members.first();
    if (!haaama) return message.reply(`kasek mention bka !`);

    const embed = new Discord.MessageEmbed()

      .setColor("RANDOM")
      .setDescription(
        `Done changed nickname  ${haaama.user.username} to ${hama}`
      );

    await message.channel.send(embed);

    haaama.setNickname(hama);
  }
});


///
///
///
///

client.on("message", message => {
  if (!message.channel.guild) return;
  let room = message.content
    .split(" ")
    .slice(1)
    .join(" ");
  let channel =
    message.guild.channels.cache.find(channel => channel.name === `${room}`) ||
    message.mentions.channels.first();
  if (message.content.startsWith(prefix + "set zkr")) {
    if (!message.channel.guild) return;
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** `MANAGE_GUILD`"
      );
    if (!room)
      return message.channel.send(
        "**Please Type The Name Channel Or mention**"
      );
    if (!channel) return message.channel.send("**Cant Find This Channel**");
    let embed = new Discord.MessageEmbed()
      .setAuthor(message.author.username, message.author.avatarURL())
      .setThumbnail(message.author.avatarURL())
      .setTitle("**โDone Check The Zkr Code Has Been Setup**")
      .addField("Channel:", `${room}`)
      .addField("Server", `${message.guild.name}`)
      .addField("Requested By:", `${message.author}`)
      .setColor("RANDOM")
      .setFooter(`${client.user.username}`)
      .setTimestamp();
    message.channel.send(embed)[message.guild.id] = {
      channel: channel.name
    };
    client.writeFile("./zkr.json", JSON.stringify(client), err => {
      if (err) console.error(err);
    });
  }
}); 


/////

client.on("message", message => {
  var az = [
    "**ุณุจุญุงู ุงููู ุงูุนูู ุงูุนุธูู**",
    "**ุงูุญูุฏ ููู ุฑุจ ุงูุนุงูููู**",
    "**ูุง ุชูุณู ุฐูุฑ ุงููู **",
    "**ุงููููู ูุงู ุฅูููููู ุฅููุงูู ูููู ุงููุญูููู ุงูููููููููู ูุงู ุชูุฃูุฎูุฐููู ุณูููุฉู ูููุงู ูููููู ููููู ููุง ููู ุงูุณููููุงููุงุชู ููููุง ููู ุงูุฃูุฑูุถู ููู ุฐูุง ุงูููุฐูู ููุดูููุนู ุนูููุฏููู ุฅููุงูู ุจูุฅูุฐููููู ููุนููููู ููุง ุจููููู ุฃูููุฏูููููู ููููุง ุฎููููููููู ูููุงู ููุญููุทูููู ุจูุดูููุกู ููููู ุนููููููู ุฅููุงูู ุจูููุง ุดูุงุก ููุณูุนู ููุฑูุณูููููู ุงูุณููููุงููุงุชู ููุงูุฃูุฑูุถู ูููุงู ููุคููุฏููู ุญูููุธูููููุง ูููููู ุงููุนูููู ุงูุนุธูู. **",
    "**ูู ุฃุนูุฐ ุจุฑุจ ูฑููููุ ูู ุดุฑ ูุง ุฎููุ ููู ุดุฑ ุบุงุณู ุฅุฐุง ููุจุ ููู ุดุฑ ูฑูููุซุช ูู ูฑูุนูุฏุ ููู ุดุฑ ุญุงุณุฏ ุฅุฐุง ุญุณุฏ. **",
    "**ูู ุฃุนูุฐ ุจุฑุจ ูฑููุงุณุ ููู ูฑููุงุณุ ุฅูู ูฑููุงุณุ ูู ุดุฑ ูฑููุณูุงุณ ูฑูุฎูุงุณุ ูฑูุฐู ููุณูุณ ูู ุตุฏูุฑ ูฑููุงุณุ ูู ูฑูุฌูุฉ ููฑููุงุณ **",
    "** ุฃุตูุจุญูุง ูุฃุตูุจุญ ุงููููู ููู ูุงูุญูุฏ ููู ุ ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงููููู ููู ุงูุญููุฏุ ููู ุนูู ูู ุดูุก ูุฏูุฑ ุ ุฑุจ ุฃุณูุฃููู ุฎููุฑ ูุง ูู ููุฐุง ุงูููู ูุฎููุฑ ูุง ุจุนูุฏู ุ ูุฃุนููุฐ ุจู ูู ุดูุฑ ูุง ูู ููุฐุง ุงูููู ูุดุฑ ูุง ุจุนูุฏูุ ุฑุจ ุฃุนููุฐุจู ูู ุงููุณูู ูุณููุก ุงูููุจุฑ ุ ุฑุจ ุฃุนููุฐ ุจู ูู ุนูุฐุงุจ ูู ุงูููุงุฑ ูุนูุฐุงุจ ูู ุงูููุจ**",
    "**ุงููููู ุฃูุช ุฑุจูู ูุง ุฅูู ุฅูุง ุฃูุช ุ ุฎููุชููู ูุฃูุง ุนุจูุฏู ุ ูุฃูุง ุนููู ุนููุฏู ููุนูุฏู ูุง ุงุณุชูุทุนูุช ุ ุฃุนููุฐุจู ูู ุดูุฑ ูุง ุตููุนุช ุ ุฃุจููุก ููู ุจูุนููุชูู ุนููู ูุฃุจููุก ุจุฐููุจู ูุงุบููุฑ ูู ูุฅููู ูุง ูุบููุฑ ุงูุฐูููุจ ุฅูุง ุฃูุช . **",
    "**ุฑุถููุช ุจุงููู ุฑุจูุง ูุจุงูุฅุณูุงู ุฏูููุง ูุจูุญููุฏ ุตูู ุงููู ุนููู ูุณูู ูุจููุง.  **",
    "** ุงููููู ุฅููู ุฃุตุจูุญุช ุฃุดููุฏู ุ ูุฃุดููุฏ ุญูููุฉ ุนูุฑุดูู ุ ูููุงุฆูุชู ุ ูุฌูููุน ุฎูููู ุ ุฃููู ุฃููุช ุงููู ูุง ุฅูู ุฅูุง ุฃููุช ูุญูุฏู ูุง ุดุฑูู ููู ุ ูุฃู  ูุญููุฏุง ุนุจูุฏู ูุฑุณููููู. **",
    "**ุญุณุจูู ุงููู ูุง ุฅูู ุฅูุง ูู ุนูููู ุชููููุช ููู ุฑุจ ุงูุนุฑุด ุงูุนุธููู.  **",
    "**ุจุณูู ุงููู ุงูุฐู ูุง ูุถูุฑ ูุน ุงุณููู ุดูุก ูู ุงูุฃุฑุถ ููุง ูู ุงูุณููุงุก ูููู ุงูุณูููุน ุงูุนูููู. **",
    "**ุงููููู ุจู ุฃุตูุจุญูุง ูุจู ุฃูุณูููุง ุ ูุจู ูุญููุง ูุจู ููููุช ูุฅูููู ุงูููุดูุฑ.  **",
    "**ุงูููู ุฅูู ุฃุนูุฐ ุจู ูู ุงููู ูุงูุญุฒูุ ูุฃุนูุฐ ุจู ูู ุงูุนุฌุฒ ูุงููุณูุ ูุฃุนูุฐ ุจู ูู ุงูุฌุจู ูุงูุจุฎูุ ูุฃุนูุฐ ุจู ูู ุบูุจุฉ ุงูุฏููุ ูููุฑ ุงูุฑุฌุงู.  **",
    "**ุฃุณุชุบูุฑ ุงููู ูุฃุชูุจ ุฅููู  **",
    "**ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ.  **",
    "** ุงูููู ุฅูู ุฃุณุฃูู ุนููุง ูุงูุนุงุ ูุฑุฒูุง ุทูุจุงุ ูุนููุง ูุชูุจูุง.**"
  ];

  if (message.content.startsWith(`${prefix}startzkr`)) {
    if (!message.guild.member(message.author).hasPermission("ADMINISTATOR")) {
      message.channel.send("**You dont Have premission`administrator` **");
    } else {
      setInterval(() => {
        let azkar = az[Math.floor(Math.random() * az.length)];
        let sendrom = message.guild.channels.cache.find(
          channel => channel.name === [message.guild.id].channel
        );
        let embed = new Discord.MessageEmbed()
          .setColor("RANDOM")
          .setTitle("[ ุงุฐูุงุฑ ]")
          .setDescription(azkar);
        sendrom.send(embed);
      }, 6000);
    }
  }
}); 




















//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Haaama /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

     ////     Token     ////




     ///    Prefix    ///



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Haaama /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa /// HaaaMa 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





